name: CI/CD
on:
  workflow_dispatch:
  push:
    branches:
      - main

env:
  ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
  ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
  ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
  ARM_SKIP_PROVIDER_REGISTRATION: true
  ENTITY_FW_CORE_VERSION: 6.0.0-rc.2.21480.5
  AZURE_WEBAPP_NAME: todos-api
  AZURE_WEBAPP_PACKAGE_PATH: ./app
  PROJECT_PATH: src/RestApi/RestApi.csproj
  CONFIGURATION: Release
  DOTNET_VERSION: '6.0.x'
  ARTIFACT_NAME: webapp
  DEV_SLOT_NAME: dev
  STG_SLOT_NAME: stg

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout üõéÔ∏è
        uses: actions/checkout@v2.3.1
        with:
          persist-credentials: false
      
      - name: Setup dotnet ${{ env.DOTNET_VERSION }}
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
          include-prerelease: true

      - name: Restore packages üîß
        run: dotnet restore "${{ env.PROJECT_PATH }}"

      - name: Build app üîß
        run: dotnet build "${{ env.PROJECT_PATH }}" --configuration ${{ env.CONFIGURATION }} --no-restore

      - name: Test app
        run: dotnet test "${{ env.PROJECT_PATH }}" --no-build

      - name: Publish app for deploy
        run: dotnet publish "${{ env.PROJECT_PATH }}" --configuration ${{ env.CONFIGURATION }} --no-build --output "${{ env.AZURE_WEBAPP_PACKAGE_PATH }}"

      - name: Generate Database Scripts
        run: |
          dotnet tool install --global dotnet-ef --version {{ env.ENTITY_FW_CORE_VERSION }}
          dotnet tool restore
          dotnet ef migrations script --output ${{env.PROJECT_PATH}}/sql/sql-script.sql --idempotent --context TodosDbContext

      - name: Publish Artifacts ‚¨Ü
        uses: actions/upload-artifact@v1
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}

  terraform:
    needs: build
    name: Deploy Infrastructure
    runs-on: ubuntu-latest
    steps:
      - name: Azure Login üîê
        run: az login --service-principal -u ${{ env.ARM_CLIENT_ID }} -p ${{ env.ARM_CLIENT_SECRET }} --tenant ${{ env.ARM_TENANT_ID }}

      - uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.0.9

      - name: Terraform Init
        run:  terraform init -upgrade

      - name: Terraform Planüîß
        run: terraform plan

      - name: Terraform Applyüè≠
        run: terraform apply -auto-approve

      - name: Azure Logout üîê
        run: az logout

  dev:
    needs: terraform
    environment:
      name: dev
      url: ${{ steps.deploy_dev.outputs.webapp-url }}
    name: Deploy to DEV
    runs-on: ubuntu-latest
    steps:
      - name: Download Artifacts ‚¨á
        uses: actions/download-artifact@v1
        with:
          name: ${{ env.ARTIFACT_NAME }}

      - name: Azure SQL Deploy
        uses: Azure/sql-action@v1
        with:
          server-name: ${{ secrets.SERVER_NAME }}
          connection-string: ${{ secrets.CONNECTION_STRING }}
          sql-file: ${{PROJECT_PATH}}/sql/sql-script.sql
      
      - name: Deploy to Azure WebApp üöÄ
        uses: azure/webapps-deploy@v2
        id: deploy_dev
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          publish-profile: ${{ secrets.AZURE_PUBLISH_PROFILE }}
          package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
          slot-name: ${{ env.DEV_SLOT_NAME }}

  staging:
    needs: dev
    environment:
      name: staging
      url: ${{ steps.deploy_staging.outputs.webapp-url }}
    name: Deploy to STG
    runs-on: ubuntu-latest
    steps:
      - name: Download Artifacts ‚¨á
        uses: actions/download-artifact@v1
        with:
          name: ${{ env.ARTIFACT_NAME }}

      - name: Azure SQL Deploy
        uses: Azure/sql-action@v1
        with:
          server-name: ${{ secrets.SERVER_NAME }}
          connection-string: ${{ secrets.CONNECTION_STRING }}
          sql-file: ${{PROJECT_PATH}}/sql/sql-script.sql

      - name: Deploy to Azure WebApp üöÄ
        uses: azure/webapps-deploy@v2
        id: deploy_staging
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          publish-profile: ${{ secrets.AZURE_PUBLISH_PROFILE }}
          package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
          slot-name: ${{ env.STG_SLOT_NAME }}

  deploy:
    needs: staging
    environment:
      name: production
      url: ${{ steps.deploy_production.outputs.webapp-url }}
    name: Deploy to PRD
    runs-on: ubuntu-latest
    steps:
      - name: Download Artifacts ‚¨á
        uses: actions/download-artifact@v1
        with:
          name: ${{ env.ARTIFACT_NAME }}

      - name: Azure SQL Deploy
        uses: Azure/sql-action@v1
        with:
          server-name: ${{ secrets.SERVER_NAME }}
          connection-string: ${{ secrets.CONNECTION_STRING }}
          sql-file: ${{PROJECT_PATH}}/sql/sql-script.sql

      - name: Deploy to Azure WebAppüöÄ
        id: deploy_production
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          publish-profile: ${{ secrets.AZURE_PUBLISH_PROFILE }}
          package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
